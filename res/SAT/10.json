{
 "decisional_np_np_sb": {
  "time": 1,
  "optimal": true,
  "obj": null,
  "sol": [
   [
    [
     1,
     10
    ],
    [
     8,
     5
    ],
    [
     6,
     9
    ],
    [
     7,
     1
    ],
    [
     5,
     10
    ],
    [
     3,
     9
    ],
    [
     6,
     8
    ],
    [
     4,
     3
    ],
    [
     7,
     2
    ]
   ],
   [
    [
     2,
     9
    ],
    [
     3,
     1
    ],
    [
     7,
     8
    ],
    [
     5,
     3
    ],
    [
     6,
     4
    ],
    [
     8,
     4
    ],
    [
     7,
     10
    ],
    [
     5,
     2
    ],
    [
     10,
     9
    ]
   ],
   [
    [
     3,
     8
    ],
    [
     6,
     7
    ],
    [
     2,
     4
    ],
    [
     10,
     4
    ],
    [
     1,
     9
    ],
    [
     2,
     1
    ],
    [
     5,
     9
    ],
    [
     8,
     10
    ],
    [
     6,
     3
    ]
   ],
   [
    [
     4,
     7
    ],
    [
     10,
     2
    ],
    [
     1,
     5
    ],
    [
     9,
     8
    ],
    [
     7,
     3
    ],
    [
     6,
     10
    ],
    [
     3,
     2
    ],
    [
     6,
     1
    ],
    [
     4,
     5
    ]
   ],
   [
    [
     6,
     5
    ],
    [
     9,
     4
    ],
    [
     10,
     3
    ],
    [
     6,
     2
    ],
    [
     8,
     2
    ],
    [
     7,
     5
    ],
    [
     1,
     4
    ],
    [
     7,
     9
    ],
    [
     1,
     8
    ]
   ]
  ],
  "max_diff": 0,
  "restarts": 0,
  "conflicts": 350,
  "mk_bool_var": 1339,
  "max_memory": 20.83
 },
 "optimization_np_np_sb": {
  "time": 2,
  "optimal": true,
  "obj": 1,
  "sol": [
   [
    [
     1,
     10
    ],
    [
     10,
     2
    ],
    [
     7,
     8
    ],
    [
     3,
     5
    ],
    [
     4,
     6
    ],
    [
     8,
     4
    ],
    [
     9,
     5
    ],
    [
     6,
     1
    ],
    [
     7,
     2
    ]
   ],
   [
    [
     9,
     2
    ],
    [
     6,
     7
    ],
    [
     10,
     3
    ],
    [
     4,
     10
    ],
    [
     1,
     9
    ],
    [
     5,
     7
    ],
    [
     8,
     6
    ],
    [
     4,
     3
    ],
    [
     1,
     8
    ]
   ],
   [
    [
     3,
     8
    ],
    [
     9,
     4
    ],
    [
     1,
     5
    ],
    [
     7,
     1
    ],
    [
     2,
     8
    ],
    [
     6,
     10
    ],
    [
     2,
     3
    ],
    [
     9,
     7
    ],
    [
     5,
     4
    ]
   ],
   [
    [
     7,
     4
    ],
    [
     3,
     1
    ],
    [
     6,
     9
    ],
    [
     8,
     9
    ],
    [
     5,
     10
    ],
    [
     2,
     1
    ],
    [
     10,
     7
    ],
    [
     5,
     2
    ],
    [
     6,
     3
    ]
   ],
   [
    [
     5,
     6
    ],
    [
     8,
     5
    ],
    [
     4,
     2
    ],
    [
     2,
     6
    ],
    [
     7,
     3
    ],
    [
     3,
     9
    ],
    [
     1,
     4
    ],
    [
     10,
     8
    ],
    [
     10,
     9
    ]
   ]
  ],
  "max_diff": 0,
  "restarts": 0,
  "conflicts": 65,
  "mk_bool_var": 2053,
  "max_memory": 204.71
 },
 "decisional_heule_seq_sb": {
  "time": 0,
  "optimal": true,
  "obj": null,
  "sol": [
   [
    [
     1,
     10
    ],
    [
     7,
     6
    ],
    [
     1,
     5
    ],
    [
     4,
     10
    ],
    [
     2,
     8
    ],
    [
     3,
     9
    ],
    [
     3,
     2
    ],
    [
     7,
     9
    ],
    [
     4,
     5
    ]
   ],
   [
    [
     2,
     9
    ],
    [
     8,
     5
    ],
    [
     7,
     8
    ],
    [
     7,
     1
    ],
    [
     10,
     5
    ],
    [
     10,
     6
    ],
    [
     1,
     4
    ],
    [
     4,
     3
    ],
    [
     3,
     6
    ]
   ],
   [
    [
     8,
     3
    ],
    [
     9,
     4
    ],
    [
     9,
     6
    ],
    [
     3,
     5
    ],
    [
     4,
     6
    ],
    [
     2,
     1
    ],
    [
     10,
     7
    ],
    [
     2,
     5
    ],
    [
     1,
     8
    ]
   ],
   [
    [
     7,
     4
    ],
    [
     3,
     1
    ],
    [
     4,
     2
    ],
    [
     2,
     6
    ],
    [
     1,
     9
    ],
    [
     7,
     5
    ],
    [
     8,
     6
    ],
    [
     8,
     10
    ],
    [
     9,
     10
    ]
   ],
   [
    [
     6,
     5
    ],
    [
     2,
     10
    ],
    [
     3,
     10
    ],
    [
     9,
     8
    ],
    [
     3,
     7
    ],
    [
     4,
     8
    ],
    [
     9,
     5
    ],
    [
     6,
     1
    ],
    [
     2,
     7
    ]
   ]
  ],
  "max_diff": 0,
  "restarts": 0,
  "conflicts": 114,
  "mk_bool_var": 2161,
  "max_memory": 208.65
 },
 "optimization_heule_seq_sb": {
  "time": 1,
  "optimal": true,
  "obj": 1,
  "sol": [
   [
    [
     1,
     10
    ],
    [
     5,
     8
    ],
    [
     4,
     2
    ],
    [
     9,
     8
    ],
    [
     3,
     7
    ],
    [
     10,
     6
    ],
    [
     2,
     3
    ],
    [
     6,
     1
    ],
    [
     5,
     4
    ]
   ],
   [
    [
     9,
     2
    ],
    [
     3,
     1
    ],
    [
     1,
     5
    ],
    [
     2,
     6
    ],
    [
     5,
     10
    ],
    [
     8,
     4
    ],
    [
     10,
     7
    ],
    [
     9,
     7
    ],
    [
     6,
     3
    ]
   ],
   [
    [
     3,
     8
    ],
    [
     6,
     7
    ],
    [
     7,
     8
    ],
    [
     4,
     10
    ],
    [
     6,
     4
    ],
    [
     2,
     1
    ],
    [
     5,
     9
    ],
    [
     2,
     5
    ],
    [
     10,
     9
    ]
   ],
   [
    [
     4,
     7
    ],
    [
     2,
     10
    ],
    [
     9,
     6
    ],
    [
     3,
     5
    ],
    [
     1,
     9
    ],
    [
     7,
     5
    ],
    [
     8,
     6
    ],
    [
     4,
     3
    ],
    [
     1,
     8
    ]
   ],
   [
    [
     5,
     6
    ],
    [
     4,
     9
    ],
    [
     10,
     3
    ],
    [
     7,
     1
    ],
    [
     8,
     2
    ],
    [
     3,
     9
    ],
    [
     1,
     4
    ],
    [
     8,
     10
    ],
    [
     7,
     2
    ]
   ]
  ],
  "max_diff": 0,
  "restarts": 0,
  "conflicts": 348,
  "mk_bool_var": 2875,
  "max_memory": 208.65
 },
 "decisional_heule_totalizer_sb": {
  "time": 0,
  "optimal": true,
  "obj": null,
  "sol": [
   [
    [
     1,
     10
    ],
    [
     8,
     5
    ],
    [
     8,
     7
    ],
    [
     3,
     5
    ],
    [
     6,
     4
    ],
    [
     2,
     1
    ],
    [
     3,
     2
    ],
    [
     9,
     7
    ],
    [
     10,
     9
    ]
   ],
   [
    [
     9,
     2
    ],
    [
     9,
     4
    ],
    [
     10,
     3
    ],
    [
     7,
     1
    ],
    [
     2,
     8
    ],
    [
     7,
     5
    ],
    [
     8,
     6
    ],
    [
     6,
     1
    ],
    [
     5,
     4
    ]
   ],
   [
    [
     8,
     3
    ],
    [
     6,
     7
    ],
    [
     9,
     6
    ],
    [
     10,
     4
    ],
    [
     10,
     5
    ],
    [
     9,
     3
    ],
    [
     1,
     4
    ],
    [
     2,
     5
    ],
    [
     2,
     7
    ]
   ],
   [
    [
     7,
     4
    ],
    [
     3,
     1
    ],
    [
     4,
     2
    ],
    [
     2,
     6
    ],
    [
     3,
     7
    ],
    [
     10,
     6
    ],
    [
     9,
     5
    ],
    [
     10,
     8
    ],
    [
     1,
     8
    ]
   ],
   [
    [
     5,
     6
    ],
    [
     2,
     10
    ],
    [
     1,
     5
    ],
    [
     9,
     8
    ],
    [
     1,
     9
    ],
    [
     8,
     4
    ],
    [
     10,
     7
    ],
    [
     3,
     4
    ],
    [
     3,
     6
    ]
   ]
  ],
  "max_diff": 0,
  "restarts": 0,
  "conflicts": 93,
  "mk_bool_var": 2211,
  "max_memory": 208.65
 },
 "optimization_heule_totalizer_sb": {
  "time": 1,
  "optimal": true,
  "obj": 1,
  "sol": [
   [
    [
     1,
     10
    ],
    [
     9,
     4
    ],
    [
     8,
     7
    ],
    [
     7,
     1
    ],
    [
     2,
     8
    ],
    [
     6,
     10
    ],
    [
     9,
     5
    ],
    [
     3,
     4
    ],
    [
     3,
     6
    ]
   ],
   [
    [
     2,
     9
    ],
    [
     6,
     7
    ],
    [
     9,
     6
    ],
    [
     5,
     3
    ],
    [
     5,
     10
    ],
    [
     4,
     8
    ],
    [
     1,
     4
    ],
    [
     8,
     10
    ],
    [
     2,
     7
    ]
   ],
   [
    [
     3,
     8
    ],
    [
     10,
     2
    ],
    [
     1,
     5
    ],
    [
     10,
     4
    ],
    [
     7,
     3
    ],
    [
     2,
     1
    ],
    [
     8,
     6
    ],
    [
     7,
     9
    ],
    [
     4,
     5
    ]
   ],
   [
    [
     4,
     7
    ],
    [
     5,
     8
    ],
    [
     10,
     3
    ],
    [
     6,
     2
    ],
    [
     1,
     9
    ],
    [
     7,
     5
    ],
    [
     3,
     2
    ],
    [
     6,
     1
    ],
    [
     9,
     10
    ]
   ],
   [
    [
     5,
     6
    ],
    [
     3,
     1
    ],
    [
     4,
     2
    ],
    [
     8,
     9
    ],
    [
     4,
     6
    ],
    [
     9,
     3
    ],
    [
     10,
     7
    ],
    [
     5,
     2
    ],
    [
     1,
     8
    ]
   ]
  ],
  "max_diff": 0,
  "restarts": 0,
  "conflicts": 824,
  "mk_bool_var": 2925,
  "max_memory": 208.65
 },
 "decisional_np_np_no_sb": {
  "time": 0,
  "optimal": true,
  "obj": null,
  "sol": [
   [
    [
     8,
     3
    ],
    [
     4,
     9
    ],
    [
     1,
     5
    ],
    [
     5,
     3
    ],
    [
     8,
     2
    ],
    [
     10,
     6
    ],
    [
     1,
     4
    ],
    [
     7,
     9
    ],
    [
     2,
     7
    ]
   ],
   [
    [
     10,
     1
    ],
    [
     10,
     2
    ],
    [
     7,
     8
    ],
    [
     6,
     2
    ],
    [
     9,
     1
    ],
    [
     7,
     5
    ],
    [
     6,
     8
    ],
    [
     4,
     3
    ],
    [
     5,
     4
    ]
   ],
   [
    [
     7,
     4
    ],
    [
     3,
     1
    ],
    [
     6,
     9
    ],
    [
     9,
     8
    ],
    [
     5,
     10
    ],
    [
     1,
     2
    ],
    [
     10,
     7
    ],
    [
     2,
     5
    ],
    [
     6,
     3
    ]
   ],
   [
    [
     6,
     5
    ],
    [
     7,
     6
    ],
    [
     4,
     2
    ],
    [
     4,
     10
    ],
    [
     7,
     3
    ],
    [
     3,
     9
    ],
    [
     5,
     9
    ],
    [
     10,
     8
    ],
    [
     1,
     8
    ]
   ],
   [
    [
     9,
     2
    ],
    [
     5,
     8
    ],
    [
     10,
     3
    ],
    [
     7,
     1
    ],
    [
     4,
     6
    ],
    [
     4,
     8
    ],
    [
     3,
     2
    ],
    [
     6,
     1
    ],
    [
     10,
     9
    ]
   ]
  ],
  "max_diff": 0,
  "restarts": 0,
  "conflicts": 530,
  "mk_bool_var": 1630,
  "max_memory": 208.91
 },
 "optimization_np_np_no_sb": {
  "time": 2,
  "optimal": true,
  "obj": 1,
  "sol": [
   [
    [
     3,
     8
    ],
    [
     3,
     1
    ],
    [
     6,
     9
    ],
    [
     6,
     2
    ],
    [
     5,
     10
    ],
    [
     4,
     8
    ],
    [
     7,
     10
    ],
    [
     9,
     7
    ],
    [
     4,
     5
    ]
   ],
   [
    [
     1,
     10
    ],
    [
     6,
     7
    ],
    [
     8,
     7
    ],
    [
     5,
     3
    ],
    [
     8,
     2
    ],
    [
     3,
     9
    ],
    [
     4,
     1
    ],
    [
     5,
     2
    ],
    [
     10,
     9
    ]
   ],
   [
    [
     2,
     9
    ],
    [
     8,
     5
    ],
    [
     10,
     3
    ],
    [
     10,
     4
    ],
    [
     4,
     6
    ],
    [
     7,
     5
    ],
    [
     2,
     3
    ],
    [
     1,
     6
    ],
    [
     1,
     8
    ]
   ],
   [
    [
     6,
     5
    ],
    [
     9,
     4
    ],
    [
     2,
     4
    ],
    [
     1,
     7
    ],
    [
     7,
     3
    ],
    [
     2,
     1
    ],
    [
     9,
     5
    ],
    [
     8,
     10
    ],
    [
     3,
     6
    ]
   ],
   [
    [
     7,
     4
    ],
    [
     10,
     2
    ],
    [
     5,
     1
    ],
    [
     9,
     8
    ],
    [
     9,
     1
    ],
    [
     6,
     10
    ],
    [
     8,
     6
    ],
    [
     4,
     3
    ],
    [
     7,
     2
    ]
   ]
  ],
  "max_diff": 0,
  "restarts": 0,
  "conflicts": 220,
  "mk_bool_var": 2540,
  "max_memory": 231.24
 },
 "decisional_heule_seq_no_sb": {
  "time": 0,
  "optimal": true,
  "obj": null,
  "sol": [
   [
    [
     6,
     5
    ],
    [
     8,
     5
    ],
    [
     3,
     10
    ],
    [
     2,
     6
    ],
    [
     9,
     1
    ],
    [
     3,
     9
    ],
    [
     1,
     4
    ],
    [
     10,
     8
    ],
    [
     2,
     7
    ]
   ],
   [
    [
     2,
     9
    ],
    [
     3,
     1
    ],
    [
     8,
     7
    ],
    [
     9,
     8
    ],
    [
     4,
     6
    ],
    [
     10,
     6
    ],
    [
     10,
     7
    ],
    [
     2,
     5
    ],
    [
     4,
     5
    ]
   ],
   [
    [
     4,
     7
    ],
    [
     2,
     10
    ],
    [
     9,
     6
    ],
    [
     3,
     5
    ],
    [
     3,
     7
    ],
    [
     8,
     4
    ],
    [
     9,
     5
    ],
    [
     1,
     6
    ],
    [
     1,
     8
    ]
   ],
   [
    [
     3,
     8
    ],
    [
     7,
     6
    ],
    [
     2,
     4
    ],
    [
     7,
     1
    ],
    [
     10,
     5
    ],
    [
     2,
     1
    ],
    [
     6,
     8
    ],
    [
     3,
     4
    ],
    [
     9,
     10
    ]
   ],
   [
    [
     10,
     1
    ],
    [
     9,
     4
    ],
    [
     5,
     1
    ],
    [
     10,
     4
    ],
    [
     2,
     8
    ],
    [
     7,
     5
    ],
    [
     3,
     2
    ],
    [
     9,
     7
    ],
    [
     3,
     6
    ]
   ]
  ],
  "max_diff": 0,
  "restarts": 0,
  "conflicts": 239,
  "mk_bool_var": 2470,
  "max_memory": 234.1
 },
 "optimization_heule_seq_no_sb": {
  "time": 1,
  "optimal": true,
  "obj": 1,
  "sol": [
   [
    [
     10,
     1
    ],
    [
     5,
     8
    ],
    [
     8,
     7
    ],
    [
     6,
     2
    ],
    [
     4,
     6
    ],
    [
     7,
     5
    ],
    [
     3,
     2
    ],
    [
     4,
     3
    ],
    [
     9,
     10
    ]
   ],
   [
    [
     2,
     9
    ],
    [
     7,
     6
    ],
    [
     3,
     10
    ],
    [
     9,
     8
    ],
    [
     3,
     7
    ],
    [
     2,
     1
    ],
    [
     4,
     1
    ],
    [
     8,
     10
    ],
    [
     4,
     5
    ]
   ],
   [
    [
     3,
     8
    ],
    [
     9,
     4
    ],
    [
     4,
     2
    ],
    [
     1,
     7
    ],
    [
     5,
     10
    ],
    [
     10,
     6
    ],
    [
     9,
     5
    ],
    [
     1,
     6
    ],
    [
     2,
     7
    ]
   ],
   [
    [
     7,
     4
    ],
    [
     10,
     2
    ],
    [
     5,
     1
    ],
    [
     5,
     3
    ],
    [
     9,
     1
    ],
    [
     8,
     4
    ],
    [
     8,
     6
    ],
    [
     7,
     9
    ],
    [
     6,
     3
    ]
   ],
   [
    [
     6,
     5
    ],
    [
     1,
     3
    ],
    [
     6,
     9
    ],
    [
     10,
     4
    ],
    [
     2,
     8
    ],
    [
     3,
     9
    ],
    [
     10,
     7
    ],
    [
     5,
     2
    ],
    [
     1,
     8
    ]
   ]
  ],
  "max_diff": 0,
  "restarts": 0,
  "conflicts": 346,
  "mk_bool_var": 3380,
  "max_memory": 234.1
 },
 "decisional_heule_totalizer_no_sb": {
  "time": 0,
  "optimal": true,
  "obj": null,
  "sol": [
   [
    [
     4,
     7
    ],
    [
     10,
     2
    ],
    [
     9,
     6
    ],
    [
     3,
     5
    ],
    [
     1,
     9
    ],
    [
     4,
     8
    ],
    [
     10,
     7
    ],
    [
     2,
     5
    ],
    [
     3,
     6
    ]
   ],
   [
    [
     2,
     9
    ],
    [
     6,
     7
    ],
    [
     1,
     5
    ],
    [
     4,
     10
    ],
    [
     4,
     6
    ],
    [
     9,
     3
    ],
    [
     3,
     2
    ],
    [
     10,
     8
    ],
    [
     1,
     8
    ]
   ],
   [
    [
     10,
     1
    ],
    [
     8,
     5
    ],
    [
     8,
     7
    ],
    [
     2,
     6
    ],
    [
     3,
     7
    ],
    [
     2,
     1
    ],
    [
     9,
     5
    ],
    [
     4,
     3
    ],
    [
     10,
     9
    ]
   ],
   [
    [
     6,
     5
    ],
    [
     9,
     4
    ],
    [
     10,
     3
    ],
    [
     8,
     9
    ],
    [
     8,
     2
    ],
    [
     7,
     5
    ],
    [
     4,
     1
    ],
    [
     1,
     6
    ],
    [
     2,
     7
    ]
   ],
   [
    [
     3,
     8
    ],
    [
     3,
     1
    ],
    [
     4,
     2
    ],
    [
     1,
     7
    ],
    [
     10,
     5
    ],
    [
     6,
     10
    ],
    [
     8,
     6
    ],
    [
     7,
     9
    ],
    [
     5,
     4
    ]
   ]
  ],
  "max_diff": 0,
  "restarts": 0,
  "conflicts": 139,
  "mk_bool_var": 2520,
  "max_memory": 234.1
 },
 "optimization_heule_totalizer_no_sb": {
  "time": 1,
  "optimal": true,
  "obj": 1,
  "sol": [
   [
    [
     8,
     3
    ],
    [
     7,
     6
    ],
    [
     6,
     9
    ],
    [
     10,
     4
    ],
    [
     1,
     9
    ],
    [
     5,
     7
    ],
    [
     2,
     3
    ],
    [
     5,
     2
    ],
    [
     8,
     1
    ]
   ],
   [
    [
     9,
     2
    ],
    [
     5,
     8
    ],
    [
     3,
     10
    ],
    [
     7,
     1
    ],
    [
     6,
     4
    ],
    [
     9,
     3
    ],
    [
     4,
     1
    ],
    [
     8,
     10
    ],
    [
     2,
     7
    ]
   ],
   [
    [
     7,
     4
    ],
    [
     2,
     10
    ],
    [
     1,
     5
    ],
    [
     6,
     2
    ],
    [
     3,
     7
    ],
    [
     4,
     8
    ],
    [
     9,
     5
    ],
    [
     1,
     6
    ],
    [
     9,
     10
    ]
   ],
   [
    [
     5,
     6
    ],
    [
     4,
     9
    ],
    [
     8,
     7
    ],
    [
     9,
     8
    ],
    [
     10,
     5
    ],
    [
     1,
     2
    ],
    [
     10,
     7
    ],
    [
     4,
     3
    ],
    [
     6,
     3
    ]
   ],
   [
    [
     10,
     1
    ],
    [
     3,
     1
    ],
    [
     4,
     2
    ],
    [
     3,
     5
    ],
    [
     2,
     8
    ],
    [
     10,
     6
    ],
    [
     6,
     8
    ],
    [
     7,
     9
    ],
    [
     5,
     4
    ]
   ]
  ],
  "max_diff": 0,
  "restarts": 0,
  "conflicts": 60,
  "mk_bool_var": 3430,
  "max_memory": 234.1
 }
}